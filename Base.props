<?xml version="1.0" encoding="utf-8"?>

<!-- Base settings shared by all thcrap modules and the dependencies we
   - provide our own project files for. For a debug build, $(UseDebugLibraries)
   - should be set to true before this file is included. Any other value,
   - including none at all, will create a Release build. -->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Globals">
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <PropertyGroup>
    <ConfigurationType Condition="'$(Configuration)'=='Debug Dynamic'">DynamicLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(Configuration)'=='Release Dynamic'">DynamicLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(Configuration)'=='Debug Static'">StaticLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(Configuration)'=='Release Static'">StaticLibrary</ConfigurationType>

    <UseDebugLibraries Condition="'$(Configuration)'=='Debug Dynamic'">true</UseDebugLibraries>
    <UseDebugLibraries Condition="'$(Configuration)'=='Debug Static'">true</UseDebugLibraries>

    <TargetName Condition="$(UseDebugLibraries)==true">$(RootNamespace)_d</TargetName>
    <TargetName Condition="$(UseDebugLibraries)!=true">$(RootNamespace)</TargetName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <PlatformToolset>v141_xp</PlatformToolset>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>$(SolutionDir)obj\$(RootNamespace) $(Configuration) $(PlatformShortName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup>
    <!-- We know that XP support will be removed next year, we don't need 10 messages every build to remember that. -->
    <XPDeprecationWarning>false</XPDeprecationWarning>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="PropertySheets">
    <Import Condition="$(UseDebugLibraries)==true" Project="Debug.props" />
    <Import Condition="$(UseDebugLibraries)!=true" Project="Release.props" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)\include\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ExceptionHandling>Sync</ExceptionHandling>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <WarningLevel>Level3</WarningLevel>
      <TreatSpecificWarningsAsErrors>4013;4028;4133</TreatSpecificWarningsAsErrors>
      <!-- This warning is inside shlobj.h -->
      <DisableSpecificWarnings>4091;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <PreprocessorDefinitions>UNICODE;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(OutputPath);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/PDBALTPATH:%_PDB% %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(ProjectDir)\include\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ImportGroup Label="ExtensionSettings">
    <Import Project="gas.props" />
  </ImportGroup>
  <ImportGroup Label="ExtensionTargets">
    <Import Project="gas.targets" />
  </ImportGroup>
  <PropertyGroup>
    <BuildDependsOn>CopyBeforeBuild;$(BuildDependsOn);</BuildDependsOn>
    <CleanDependsOn>CleanCopiedFiles;$(CleanDependsOn);</CleanDependsOn>
  </PropertyGroup>
  <Target Name="CopyBeforeBuild" Condition="'@(CopyFiles)'!=''">
    <ItemGroup>
      <FilesToCopy Condition="'%(CopyFiles.OutputFile)'!='' And Exists(%(CopyFiles.Identity))" Include="%(CopyFiles.Identity)" OutputFile="%(CopyFiles.OutputFile)"/>
      <FilesToCopy Condition="'%(CopyFiles.OutputFolder)'!='' And Exists(%(CopyFiles.Identity))" Include="%(CopyFiles.Identity)" OutputFile="%(CopyFiles.OutputFolder)\%(CopyFiles.RecursiveDir)%(CopyFiles.Filename)%(CopyFiles.Extension)"/>
    </ItemGroup>
    <Copy SourceFiles="%(FilesToCopy.Identity)" DestinationFiles="%(FilesToCopy.OutputFile)" SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="SuccessfullyCopiedFiles" />
    </Copy>
    <Message Condition="'@(FilesToCopy)'!=''" Text="Successfully copied @(SuccessfullyCopiedFiles->Count())/@(FilesToCopy->Count()) extra files from project &quot;$(ProjectName)&quot;%0A @(SuccessfullyCopiedFiles,'%0A ')" Importance="High" />
  </Target>
  <Target Name="CleanCopiedFiles" Condition="'@(CopyFiles)'!=''">
    <ItemGroup>
      <FilesToClean Condition="'%(CopyFiles.OutputFile)'!='' And Exists(%(CopyFiles.OutputFile))" Include="%(CopyFiles.OutputFile)" />
      <FilesToClean Condition="'%(CopyFiles.OutputFolder)'!='' And Exists('%(CopyFiles.OutputFolder)\%(CopyFiles.RecursiveDir)%(CopyFiles.Filename)%(CopyFiles.Extension)')" Include="%(CopyFiles.OutputFolder)\%(CopyFiles.RecursiveDir)%(CopyFiles.Filename)%(CopyFiles.Extension)" />
    </ItemGroup>
    <Delete Condition="Exists(%(FilesToClean.Identity))" Files="%(FilesToClean.Identity)">
      <Output TaskParameter="DeletedFiles" ItemName="SuccessfullyCleanedFiles" />
    </Delete>
    <Message Condition="'@(FilesToClean)'!=''" Text="Successfully cleaned @(SuccessfullyCleanedFiles->Count())/@(FilesToClean->Count()) extra files from project &quot;$(ProjectName)&quot;%0A @(SuccessfullyCleanedFiles,'%0A ')" Importance="High" />
  </Target>
</Project>
